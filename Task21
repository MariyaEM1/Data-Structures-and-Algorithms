//https://www.hackerrank.com/contests/sda-hw-7/challenges/zoros-mask

#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <set>
#include <iterator>
#include <cmath>
//#include <bits/stdc++.h>
using namespace std;

set<long> result;
int intoNum(vector<int>& v) {
    unsigned i = 0, num = 0;
    while (i != v.size()) {
        num = num * 10 + v[i];
        i++;
    }
    return num;
}
void f(vector<int>& digits, int j) {
    result.insert(intoNum(digits));
    if (j >= digits.size()) {
        return;
    }
    if (digits[j] == 1) {
        f(digits, j + 1);
        vector<int> digits0;
        for (size_t i = 0; i < digits.size(); i++)
        {
             digits0.push_back(digits[i]);
        }
        digits0[j] = 0;
        f(digits0, j + 1);
    }
    else {
        f(digits, j + 1);
    }
}
int main() {
    vector<int> digits;
    long n, a, cntOne = 0, digit;
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        cin >> a;
        while (a > 0) {
            digit = a % 2;
            digits.push_back(digit);
            a = a / 2;
            cntOne++;
        }
        reverse(digits.begin(), digits.end());
        f(digits, 0);
        digits.clear();
    }
    cout << result.size();
}

